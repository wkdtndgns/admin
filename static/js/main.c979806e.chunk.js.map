{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","$","jQuery","Container","styled","div","LoginContainer","App","props","state","url","registerNews","bLogin","hide","axios","get","this","then","r","setState","data","id","val","password","news","uri","category","description","e","preventDefault","frm","FormData","append","document","getElementById","files","method","headers","alert","window","location","reload","focus","num","className","Table","striped","bordered","hover","size","map","key","onClick","requestNews","bind","nameKR","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","type","title","Button","variant","register","placeholder","Text","Check","label","checkLogin","React","Component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c979806e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, {Component, Fragment} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {Table, Form, Button, Row, Col} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport jQuery from \"jquery\";\r\nimport axios from 'axios';\r\n\r\nconst $ = jQuery;\r\n\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: left;\r\n  justify-content: left;\r\n  margin: 180px auto 0px auto;\r\n  flex-direction: column;\r\n  width:1280px;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  align-items: left;\r\n  justify-content: left;\r\n  margin: 100px auto 0px auto;\r\n  flex-direction: column;\r\n  width:1280px;\r\n`;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            url: 'https://colletter.com/api',\r\n            registerNews: [],\r\n            bLogin: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        $('#btnShowPopup').hide();\r\n\r\n        axios.get(this.state.url + `/admin/news/request`).then(\r\n            r => {\r\n                this.setState({\r\n                    registerNews: r.data\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    checkLogin() {\r\n        let id = $('#email').val();\r\n        let password = $('#password').val();\r\n\r\n        if (id === 'ubuntu' && password === 'colletter') {\r\n            this.setState({\r\n                bLogin: true\r\n            });\r\n        }\r\n    }\r\n\r\n    requestNews(news) {\r\n        $('#uri').val(news.uri);\r\n        $('#category').val(news.category.id);\r\n        $('#description').val(news.description);\r\n    }\r\n\r\n    register(e) {\r\n        e.preventDefault();\r\n        if (!$('#description').val()) {\r\n            $('#description').focus();\r\n            alert('설명을 입력해주세요.');\r\n        } else if (!$('#uri').val()) {\r\n            $('#uri').focus();\r\n            alert('링크를 입력해주세요.');\r\n        } else {\r\n\r\n            const frm = new FormData();\r\n            frm.append('categoryId', $('#category').val());\r\n            frm.append('content', $('#description').val());\r\n            frm.append('uri', $('#uri').val());\r\n            frm.append('name', $('#name').val());\r\n            frm.append('image', $('#imageName').val());\r\n            frm.append('imageFile', document.getElementById(\"image\").files[0]);\r\n\r\n//            const params = JSON.stringify({\r\n//                \"categoryId\": $('#category').val(),\r\n//                \"description\": $('#description').val(),\r\n//                \"uri\": $('#uri').val(),\r\n//                \"name\": $('#name').val(),\r\n//                \"image\": $('#imageName').val(),\r\n//            });\r\n            const url = this.state.url + '/admin/news';\r\n            axios({\r\n                method: 'post',\r\n                url,\r\n                data: frm,\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            }).then(\r\n                r => {\r\n                    alert('등록완료');\r\n                    window.location.reload();\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let num = 0;\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                {\r\n                    (this.state.bLogin === true) ? (\r\n                        <Container>\r\n                            <Table striped bordered hover size=\"sm\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>번호</th>\r\n                                    <th>카테고리</th>\r\n                                    <th>설명</th>\r\n                                    <th>uri</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {this.state.registerNews.map((news) => {\r\n\r\n                                    num++;\r\n                                    return <tr key={news.id} onClick={this.requestNews.bind(this, news)}>\r\n                                        <td>{num}</td>\r\n                                        <td>{news.category.nameKR}</td>\r\n                                        <td>{news.description}</td>\r\n                                        <td>{news.uri}</td>\r\n                                    </tr>\r\n                                })}\r\n\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                            <Form>\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm=\"2\">\r\n                                        카테고리\r\n                                    </Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <Form.Control type=\"text\" id=\"category\"/>\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                    <Form.Label column sm=\"2\">\r\n                                        설명\r\n                                    </Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <Form.Control type=\"text\" id=\"description\"/>\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                    <Form.Label column sm=\"2\">\r\n                                        이미지 이름\r\n                                    </Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <Form.Control type=\"text\" id=\"imageName\"/>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                    <Form.Label column sm=\"2\">\r\n                                        이미지\r\n                                    </Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <input type=\"file\" id=\"image\" title=\"\"/>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                    <Form.Label column sm=\"2\">\r\n                                        NAME\r\n                                    </Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <Form.Control type=\"text\" id=\"name\"/>\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                    <Form.Label column sm=\"2\">\r\n                                        URI\r\n                                    </Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <Form.Control type=\"text\" id=\"uri\"/>\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Button variant=\"primary\" onClick={this.register.bind(this)}>\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n\r\n                        </Container>\r\n                    ) : <LoginContainer>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"text\" id=\"email\" placeholder=\"Enter email\"/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                    We'll never share your email with anyone else.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" id=\"password\" placeholder=\"Password\"/>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicChecbox\">\r\n                                <Form.Check type=\"checkbox\" label=\"Check me out\"/>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={this.checkLogin.bind(this)}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </LoginContainer>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}